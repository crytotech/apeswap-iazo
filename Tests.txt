=== IAZO ===
> Initializer check
> deposit
    - native
    - ERC20
    - amount check
    - multiple accounts
> withdraw
    - failed
        - withdraw base
        - force fail
        - end block reached, no softcap
    - success
        - amount check
        - native
        - ERC20
        - endblock reached with softcap
        - hardcap reached
> forceFail
> Update info
    - start block
    - max spend limit
> add liquidity
    -


=== IAZOExposer ===
> registerIAZO
    - Factory Only
> read IAZO (index, length)
> IAZOIsRegistered
> addTokenTimelock
    - Liquidity locker Only
> getTokenTImelock


=== IAZOFactory ===
> Proxy update implementation
> IAZO version update & downgrade
> createIAZO
    - param fails
    - prepaid and not prepaid fees
    - burn remaind and dont burn remains
    - tokensRequired check
    - tokens received
    - succesfully added IAZO to iazoExposer
    - IAZO initializer check if it works with array variables. possible list overflow?


=== IAZOLiquidityLocker ===
> Proxy update implementation
> lockLiquidity


=== IAZOSettings ===
> Getters functionality
> Setters functionality


=== IAZOTokenTimelock ===
> deposit
> release
    - Only beneficiary check
    - ReleaseTime check
    - Revoked check
> Does it work from liquidity locker



=== FULL IAZO CHECKS ===


=== ISSUES/MENTIONS ===
- Factory createIAZO() first param is IAZO owner. Can just be msg.sender?
- AddLiquidity() still has to be run manually (can't withdraw earlier)
- One whale can just buy all the tokens
- The setting/param values for creating an IAZO is not clear.
    - if you want to sell 99 tokens should it be 99 or 99e18? same for the others.


=== Console scripts ===
exposer = await IAZOExposer.deployed();
settings = await IAZOSettings.deployed();
banana = await Banana.deployed();
wnative = await ERC20Mock.deployed();
admin = await ProxyAdmin.deployed();

blocknumber = await web3.eth.getBlockNumber();
newiazosettings = ["100000000000000000", "21000000000000000000", "1100000000000000000", blocknumber + 20, 28700, 60, "2000000000000000000000000", "30", "200000000000000000"]

factory = await IAZOFactory.at();
locker = await IAZOLiquidityLocker.at();


{ IAZOExposer: '0x1064f6fa58C3504d3722e5d221bD001CA7a4592b',
  IAZOSettings: '0xe291748F78180Ff328a80a953A41e29D2986b578',
  IAZOLiquidityLocker: '0xb93D18327AC34aFd41bc958B8aa4B4767004a360',
  IAZOLiquidityLockerProxy: '0x8bB80dDD81a6a6B0cc2df6a28c451DACA6c8765B',
  IAZOFactory: '0xB5c10589756A1d474d0C48e27EC9D5bAbFE6624b',
  IAZOFactoryProxy: '0x3b240604054C05cBDFe1116C974688D97aa9bcDD',
  IAZO: '0x10B8F841F207AbF25806Bb979945Ba3f9c7d4aD8',
  ProxyAdmin: '0x2814b4dF4FC0DBb30e419cEbcD31A035547EBD2A',
  wNative: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd' }


